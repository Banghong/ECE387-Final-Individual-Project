#include <SoftwareSerial.h> 
#include <OneWire.h>

SoftwareSerial pHserial(2,3); // (RX,TX) 

OneWire ds(12); // on pin 12

char inputBuffer[10];   // For incoming serial data

int button1 = 6; //calibrate button on pin 6
int tmpPwr = 8; //power line for the temp sensor 

/=========================SET UP=======================================//
void setup()
{ 
  pinMode(button1, INPUT); //make button1 an input
  digitalWrite(button1, HIGH); 
  
  pHserial.begin(38400);//the pH stamp communicates at 38400 baud by default 
  Serial.begin(9600);//the LCD commincates at 9600 baud by default 
  
  getTemp();/ get the first value because of this one is no accuracy
   
  pinMode(tmpPwr, OUTPUT);
  digitalWrite(tmpPwr, HIGH);  // 4.7Kohm resistor needed
}
//========================LOOP==================================//
void loop() 
{
  if(digitalRead(button1) == LOW)  //if button1 is pressed, calibrate
   {
      clearLCD();// clear the LCD screen
      selectLineOne();//move up to the first line of the LCD
      goTo(3);//move in to position 3 on the LCD for centered text
      Serial.print("Calibrating");
      calibrate();
      delay(500);// delay 
      Serial.print("Temp=");//print the current temp in degrees F
      Serial.print(convertTemp());
      Serial.print("F");  
      selectLineTwo();//move down to the second line of the LCD
      goTo(21);//move in to position 21
      Serial.print("pH=");//print the current pH
      getPh();
      delay(500);
}

//====================METHODS====================================//
float getTemp()
{
  //returns the temperature from one DS18S20 in degrees C
  byte data[12];
  byte addr[8];
  
  if ( !ds.search(addr)) {
  //no more sensors on chain, reset search
  ds.reset_search();
  return -1000;
  }
  
  if ( OneWire::crc8( addr, 7) != addr[7]) {
  //Serial.println("CRC is not valid!");
  return -1000;
  }
  
  if ( addr[0] != 0x10 && addr[0] != 0x28) {
  //Serial.print("Device is not recognized");
  return -1000;
  }
  
  ds.reset();
  ds.select(addr);
  ds.write(0x44,1); // start conversion, with parasite power on at the end
  
  byte present = ds.reset();
  ds.select(addr);
  ds.write(0xBE); // Read Scratchpad
  
  
  for (int i = 0; i < 9; i++) { // we need 9 bytes
  data[i] = ds.read();
  }
  
  ds.reset_search();
  
  byte MSB = data[1];
  byte LSB = data[0];
  
  float tempRead = ((MSB << 8) | LSB); //using two's compliment
  float TemperatureSum = tempRead / 16;
  
  return TemperatureSum; // returns the temeperature in degrees C
}

float convertTemp()
{
  //This function converts the temerature from celcius to farenheit
  float temperature = getTemp();
  float tempF = temperature * 1.8 + 32;
  return(tempF);
}
//===============================================================//
void getPh()
{
  //This function queries the pH stamp to return one reading of pH
  pHserial.print("R\r"); //send R followed by a carriage return prompts the stamp to send back a single pH reading
  delay(10);
  
  pHserial.readBytesUntil(13,inputBuffer,20);//this reads back the results into the inputBuffer we created until it sees 
  //a carriage return (13) or until it reaches 20 bytes (which it shouldn't)
  delay(500);
  
  Serial.print(inputBuffer);// print the pH value to the Serial port, which is connected to the LCD.
}
//================================================================//
void calibrate()
{
  //This function calibrates the pH stamp with the current temperature read from the DS18B20 temp sensor
  delay(500);
  pHserial.print(getTemp()); //pritn temp in degrees C to Ph Sensor
  pHserial.write("\r"); 
  delay(1000);
  clearLCD();
  selectLineOne();//move up to the first line of the LCD
  goTo(4);//Move in 4 spaces on the second line to center text
  selectLineTwo();//move down to the second line of the LCD
  goTo(19);//move in to position 19 to center text
  Serial.print("Temp=");//print the temperture that was used to calibrate to the LCD
  Serial.print(convertTemp());
  Serial.print("F");
  delay(500);
}
//=============================================================//
// Resets LCD display
void clearLCD() 
{
   Serial.write(0xFE);
   Serial.write(0x01);
}
//====================================================//
void selectLineOne() 
{ //puts the cursor at line 0 char 0.
   Serial.write(0xFE); //command flag
   Serial.write(128); //position
}
//====================================================//
void selectLineTwo() 
{ //puts the cursor at line 1 char 0.
   Serial.write(0xFE); 
   Serial.write(192); // lcd position
}
//====================================================//
// line 1: 0-15, line 2: 16-31, 31+ defaults back to 0
void goTo(int position) 
{
  if (position < 16) 
  {
    Serial.write(0xFE); //command flag
    Serial.write((position+128));
  } else if (position < 32) 
  {
    Serial.write(0xFE); //command flag
    Serial.write((position+48+128));
  } else
  {
    goTo(0);
  }
}
//============================END==========================//
